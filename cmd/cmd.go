package cmd

import (
	"io/ioutil"
	"os"
	"path"

	"github.com/appist/appy/core"
	"github.com/spf13/cobra"
)

// AppCmd wraps the information of what a command line is about.
type AppCmd = cobra.Command

var (
	mainAssets       = "main_assets.go"
	app              core.App
	root             *AppCmd
	reservedCmdNames = map[string]bool{}
)

// Init initializes the root command instance.
func Init(a core.App) {
	app = a
	cmdName := path.Base(os.Args[0])
	if cmdName == "main" {
		wd, _ := os.Getwd()
		cmdName = path.Base(wd)
	}

	root = &AppCmd{
		Use:     cmdName,
		Short:   "An opinionated productive web framework that helps scaling business easier.",
		Version: core.VERSION,
	}
}

// AddCommand adds a custom command.
func AddCommand(command *AppCmd) {
	if _, ok := reservedCmdNames[command.Name()]; ok {
		app.Logger.Fatalf("\"%s\" command name is reserved, please update the command name.", command.Name())
	}

	root.AddCommand(command)
}

// Run executes the root command.
func Run() {
	root.Execute()
}

func generateMainAssets() {
	os.Remove(mainAssets)

	template := []byte(`
// Generated by appy. DO NOT EDIT.
package main
import "net/http"
var assets http.FileSystem
`)
	err := ioutil.WriteFile(mainAssets, template, 0644)
	if err != nil {
		app.Logger.Fatal(err)
	}
}
